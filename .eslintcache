[{"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\index.tsx":"1","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\App.js":"2","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\reportWebVitals.ts":"3","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\models\\index.tsx":"4","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\models\\models.js":"5","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\home\\index.js":"6","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\login\\index.js":"7","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\index.jsx":"8","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\models\\common\\index.js":"9","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\models\\login\\index.js":"10","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\models\\epidemic\\index.js":"11","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\models\\menu\\index.js":"12","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\models\\userController\\index.js":"13","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\util\\index.js":"14","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\util\\axios.js":"15","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\component\\Sider\\index.js":"16","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\index.js":"17","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\whitePage\\index.js":"18","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\component\\InfoTitle\\index.jsx":"19","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\addMenuType\\index.jsx":"20","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\approve\\index.jsx":"21","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\addMenu\\index.jsx":"22","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\menuList\\index.jsx":"23","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\order\\index.jsx":"24","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\component\\Sider\\config.js":"25","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\studentInfo.jsx":"26","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\studentHealth.jsx":"27","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\comeSchool.jsx":"28","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\studentJourney.jsx":"29","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\iconfont\\order.jsx":"30","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\component\\MyTable.jsx":"31","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\component\\MySearch.jsx":"32","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\component\\echarts.jsx":"33","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\component\\epidemicEcharts.jsx":"34","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\component\\onImport.jsx":"35","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\quarantineSet.jsx":"36","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\grade\\index.js":"37","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\grade\\gradeForm.jsx":"38","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\grade\\addCourse.jsx":"39","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\grade\\userInfo.jsx":"40","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\grade\\myCourse.jsx":"41","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\grade\\component\\index.js":"42","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\grade\\component\\MyTable.jsx":"43"},{"size":535,"mtime":1618240583611,"results":"44","hashOfConfig":"45"},{"size":952,"mtime":1618240583610,"results":"46","hashOfConfig":"45"},{"size":440,"mtime":1618240583629,"results":"47","hashOfConfig":"45"},{"size":228,"mtime":1618240583613,"results":"48","hashOfConfig":"45"},{"size":866,"mtime":1618388647023,"results":"49","hashOfConfig":"45"},{"size":247,"mtime":1618240583616,"results":"50","hashOfConfig":"45"},{"size":2579,"mtime":1618833740303,"results":"51","hashOfConfig":"45"},{"size":1548,"mtime":1618836032051,"results":"52","hashOfConfig":"45"},{"size":760,"mtime":1618240583612,"results":"53","hashOfConfig":"45"},{"size":1577,"mtime":1618240583613,"results":"54","hashOfConfig":"45"},{"size":5235,"mtime":1618820213088,"results":"55","hashOfConfig":"45"},{"size":3502,"mtime":1618240583614,"results":"56","hashOfConfig":"45"},{"size":1311,"mtime":1618240583615,"results":"57","hashOfConfig":"45"},{"size":319,"mtime":1618240583631,"results":"58","hashOfConfig":"45"},{"size":1417,"mtime":1618240583630,"results":"59","hashOfConfig":"45"},{"size":1670,"mtime":1618240583619,"results":"60","hashOfConfig":"45"},{"size":508,"mtime":1618821411700,"results":"61","hashOfConfig":"45"},{"size":670,"mtime":1618821251334,"results":"62","hashOfConfig":"45"},{"size":1565,"mtime":1618833721078,"results":"63","hashOfConfig":"45"},{"size":3058,"mtime":1618391045233,"results":"64","hashOfConfig":"45"},{"size":4714,"mtime":1618240583623,"results":"65","hashOfConfig":"45"},{"size":6439,"mtime":1618389614686,"results":"66","hashOfConfig":"45"},{"size":3325,"mtime":1618240583625,"results":"67","hashOfConfig":"45"},{"size":3158,"mtime":1618240583626,"results":"68","hashOfConfig":"45"},{"size":734,"mtime":1618836846842,"results":"69","hashOfConfig":"45"},{"size":3109,"mtime":1618821038796,"results":"70","hashOfConfig":"45"},{"size":6668,"mtime":1618821073474,"results":"71","hashOfConfig":"45"},{"size":4118,"mtime":1618662292598,"results":"72","hashOfConfig":"45"},{"size":6952,"mtime":1618820816271,"results":"73","hashOfConfig":"45"},{"size":325,"mtime":1618240583616,"results":"74","hashOfConfig":"45"},{"size":579,"mtime":1618662292599,"results":"75","hashOfConfig":"45"},{"size":1347,"mtime":1618837255685,"results":"76","hashOfConfig":"45"},{"size":1083,"mtime":1618814447681,"results":"77","hashOfConfig":"45"},{"size":13588,"mtime":1618814447684,"results":"78","hashOfConfig":"45"},{"size":2070,"mtime":1618820932412,"results":"79","hashOfConfig":"45"},{"size":2471,"mtime":1618822422010,"results":"80","hashOfConfig":"45"},{"size":351,"mtime":1618835826512,"results":"81","hashOfConfig":"45"},{"size":483,"mtime":1618835678973,"results":"82","hashOfConfig":"45"},{"size":3773,"mtime":1618837977549,"results":"83","hashOfConfig":"45"},{"size":1385,"mtime":1618839920834,"results":"84","hashOfConfig":"45"},{"size":2750,"mtime":1618837945428,"results":"85","hashOfConfig":"45"},{"size":132,"mtime":1618836305788,"results":"86","hashOfConfig":"45"},{"size":579,"mtime":1618835558530,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"oc0vxu",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"93"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"93"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"93"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"93"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"93"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"93"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"93"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"93"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"93"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"93"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"93"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"93"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\index.tsx",[],["188","189"],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\App.js",[],["190","191"],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\reportWebVitals.ts",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\models\\index.tsx",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\models\\models.js",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\home\\index.js",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\login\\index.js",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\index.jsx",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\models\\common\\index.js",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\models\\login\\index.js",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\models\\epidemic\\index.js",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\models\\menu\\index.js",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\models\\userController\\index.js",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\util\\index.js",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\util\\axios.js",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\component\\Sider\\index.js",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\index.js",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\whitePage\\index.js",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\component\\InfoTitle\\index.jsx",["192"],"/*\r\n * @Author: lsh\r\n * @email: 864115770@qq.com\r\n * @Date: 2021-02-17 22:49:24\r\n */\r\nimport React, { useEffect, useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { getStorage, clearStorage } from \"../../../../util/index\";\r\nimport style from  \"./index.module.less\"\r\nconst InfoTitle = props =>{\r\n  const { loginDispatch } = props\r\n  const [userName, setUserName] = useState('')\r\n  let history = useHistory();\r\n\r\n  const getUserName = async (token) => {\r\n    const result = await loginDispatch.getUserInfo(token)\r\n    console.log(result);\r\n  }\r\n\r\n  const breakLogin = () => {\r\n    console.log('退出');\r\n    clearStorage()\r\n    history.push(\"/\");\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if(!props.userName) {\r\n     const token = getStorage('token')\r\n     getUserName(token)\r\n    }\r\n    setUserName(props.userName)\r\n  }, [userName])\r\n  return (\r\n    <div className={style.top}>\r\n      <span className={style.title}>实验评分管理系统</span>\r\n      <div>\r\n        <span className={style.user}>当前用户：{props.userName}</span>\r\n        <span className={style.break} onClick={breakLogin}>退出</span>\r\n      </div>\r\n     \r\n     \r\n      \r\n    </div>\r\n  )\r\n} \r\n\r\nconst mapState = state => ({\r\n    userPower: state.login.userPower,\r\n    userName: state.login.userName\r\n})\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n    loginDispatch : dispatch.login\r\n})\r\nconst InfoTitleContainer = connect(mapState, mapDispatch)(InfoTitle)\r\nexport default InfoTitleContainer;","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\addMenuType\\index.jsx",["193","194"],"/*\r\n * @Description: \r\n * @Author: lsh\r\n * @Email: 864115770@qq.com\r\n * @Date: 2021-03-24 11:37:09\r\n * @LastEditTime: 2021-04-14 17:04:05\r\n * @LastEditors: Please set LastEditors\r\n */\r\nimport React, { useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Input, Button, Checkbox, Table, message } from 'antd';\r\n\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 4 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\n\r\nconst AddMenuType = props => {\r\n  const { menuDispatch } = props;\r\n\r\n  \r\n\r\n  const onFinish = async (values) => {\r\n    console.log('Success:', values);\r\n    const result = await menuDispatch.addMenuTypeList(values.menuName)\r\n    if(result === true) {\r\n      message.success('添加成功')\r\n      getMenuTypeList()\r\n    } else {\r\n      message.success('添加失败')\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  const getMenuTypeList = async () => {\r\n    await menuDispatch.getMenuTypeList()\r\n    console.log(props);\r\n  }\r\n\r\n  const clickDelete = async (log_id) => {\r\n    const result = await menuDispatch.deleteMenuTypeList(log_id)\r\n    if(result === true) {\r\n      message.success('删除成功')\r\n      getMenuTypeList()\r\n    } else {\r\n      message.success('删除失败')\r\n    }\r\n  };\r\n\r\n  useEffect( ()=> {\r\n     getMenuTypeList()\r\n   \r\n  }, [])\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: '菜品类型标号',\r\n      dataIndex: 'log_id',\r\n      key: 'log_id'\r\n    },\r\n    {\r\n      title: '菜品类型名称',\r\n      dataIndex: 'menuName',\r\n      key: 'menuName'\r\n    },\r\n    {\r\n      title: '添加时间',\r\n      dataIndex: 'createTime',\r\n      key: 'createTime'\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      key: 'x',\r\n      render: (record) => {\r\n        return (\r\n          <a onClick={() => clickDelete(record.log_id)}>Delete</a>\r\n        )\r\n      }\r\n    },\r\n  ]\r\n \r\n  \r\n  \r\n  return (\r\n    <div>\r\n      <div>\r\n      <Table \r\n        columns={columns} \r\n        dataSource={props.menuType} \r\n        rowKey='log_id'\r\n      />\r\n      </div>\r\n      <div>\r\n        <Form\r\n          {...layout}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          span={8}\r\n        >\r\n          <Form.Item\r\n            label=\"菜品类型\"\r\n            name=\"menuName\"\r\n            rules={[{ required: true, message: '请输入菜品类型' }]}\r\n            >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item {...tailLayout} >\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n)\r\n}\r\n\r\n\r\nconst mapState = state => ({\r\n  menuType: state.menu.menuTypeList\r\n})\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n  menuDispatch: dispatch.menu\r\n})\r\nconst AddMenuTypeContainer = connect(mapState, mapDispatch)(AddMenuType)\r\nexport default AddMenuTypeContainer;","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\approve\\index.jsx",["195"],"/*\r\n * @Author: lsh\r\n * @email: 864115770@qq.com\r\n * @Date: 2021-02-16 18:42:43\r\n */\r\nimport React, { useEffect, useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Table, message, Button, Modal, Form, Input} from \"antd\";\r\nimport  style  from \"./index.module.less\"\r\nconst Approve = props => {\r\n  const { userControllerDispatch } = props;\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n\r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    console.log('Success:', values);\r\n    \r\n    const result = await userControllerDispatch.addUser(values)\r\n    if(result === true) {\r\n      message.success('添加成功')\r\n      getApproveList()\r\n      setIsModalVisible(false);\r\n    } else {\r\n      message.success('添加失败')\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n \r\n  const getApproveList = async (page) => {\r\n    const res = await  userControllerDispatch.getApproveList()\r\n    console.log('----', res);\r\n\r\n    \r\n  }\r\n\r\n  const clickDelete = async (log_id) => {\r\n    const result = await userControllerDispatch.deleteUser(log_id)\r\n    if(result === true) {\r\n      message.success('删除成功')\r\n      getApproveList()\r\n    } else {\r\n      message.error('删除失败')\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: '用户编号',\r\n      dataIndex: 'log_id',\r\n      key: 'log_id'\r\n    },\r\n    {\r\n      title: '登陆账号',\r\n      dataIndex: 'userId',\r\n      key: 'userId'\r\n    },\r\n    {\r\n      title: '登陆密码',\r\n      dataIndex: 'password',\r\n      key: 'password'\r\n    },\r\n    {\r\n      title: '用户名称',\r\n      dataIndex: 'userName',\r\n      key: 'userName',\r\n    },\r\n    {\r\n      title: '登陆时间',\r\n      dataIndex: 'createTime',\r\n      key: 'createTime'\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      key: 'x',\r\n      render: (record) => {\r\n        return (\r\n          <Button onClick={() => clickDelete(record.log_id)}> 删除 </Button>\r\n        )\r\n      }\r\n    },\r\n   ]\r\n\r\n \r\n  useEffect( ()=> {\r\n    getApproveList()\r\n }, [])\r\n  return (\r\n    <div width=\"100%\">\r\n      <div>\r\n        <div className={style.userAdd}>\r\n          <Button type=\"primary\" onClick={showModal}>\r\n            添加用户\r\n          </Button>\r\n        </div>\r\n     \r\n      <Modal title=\"Basic Modal\" \r\n        visible={isModalVisible} \r\n        onOk={onFinish} \r\n        onCancel={handleCancel} \r\n        destroyOnClose={true}\r\n        footer={[\r\n          // 重点：定义右下角 \r\n          <Button onClick={handleCancel}>\r\n            取消\r\n          </Button>\r\n        ]}\r\n         \r\n      >\r\n        <Form\r\n          {...layout}\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"登陆账号\"\r\n            name=\"userId\"\r\n            rules={[{ required: true, message: '请输入登陆账号~' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"请输入登陆账号\"\r\n            name=\"password\"\r\n            rules={[{ required: true, message: '请输入登陆账号~' }]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"用户名称\"\r\n            name=\"userName\"\r\n            rules={[{ required: true, message: '请输入登陆名称~' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n      </div>\r\n      <div  span={24}>\r\n        <Table \r\n          span={24}\r\n          columns={columns} \r\n          bordered\r\n          dataSource={ props && props.userList } \r\n          rowKey='log_id'\r\n        />\r\n      </div>\r\n   </div>\r\n  )\r\n}\r\n\r\nconst mapState = state => ({\r\n  // approveList = state.userController\r\n  userList : state.userController.userList\r\n})\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n  userControllerDispatch : dispatch.userController\r\n\r\n})\r\nconst ApproveContainer = connect(mapState, mapDispatch)(Approve)\r\nexport default ApproveContainer;","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\addMenu\\index.jsx",["196","197"],"/*\r\n * @Description: \r\n * @Author: lsh\r\n * @Email: 864115770@qq.com\r\n * @Date: 2021-03-24 11:34:40\r\n * @LastEditTime: 2021-04-14 16:40:14\r\n * @LastEditors: Please set LastEditors\r\n */\r\nimport React, { useEffect, useState, useCallback } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Input, Button, Checkbox, Table, message, Select, Upload  } from 'antd';\r\nimport { UploadOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 4 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst AddMenu = props => {\r\n  // const formRef = React.createRef();\r\n  const [form] = Form.useForm();\r\n  // const { getFieldDecorator } = this.props.form;\r\n  const { menuDispatch } = props;\r\n  const [menuType, setMenuType] = useState([])\r\n  const [photoToken, setPhotoToken] = useState('')\r\n  const [goodUrl, setGoodUrl] = useState('')\r\n  const changeGoodUrl = useCallback((goodUrl) =>setGoodUrl(goodUrl), [])\r\n  \r\n  const getMenuTypeList = async () => {\r\n   const result =  await menuDispatch.getMenuTypeList()\r\n    setMenuType(result)\r\n    console.log(menuType);\r\n  }\r\n\r\n \r\n\r\n  const onFinish = async (values) => {\r\n    console.log(values);\r\n    const submitForm = {\r\n      ...values,\r\n      goodNum: values.goodNum.value,\r\n      goodUrl: goodUrl,\r\n      showTrue: true\r\n    }\r\n    console.log(submitForm);\r\n    const result = await menuDispatch.addGood(submitForm)\r\n    if(result === true) {\r\n      message.success('添加成功')\r\n    } else {\r\n      message.success('添加失败')\r\n    }\r\n\r\n  };\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const renderOption = (arr, key, label) => {\r\n    return (\r\n      arr.map((item) => (\r\n        <Option key={item[key]} value={item[key]} > {item[label]}</Option>\r\n      ))\r\n    )\r\n  }\r\n  \r\n\r\n  useEffect( ()=> {\r\n    getMenuTypeList()\r\n   \r\n  \r\n }, [])\r\n\r\n  const MyUploadPhoto = (props) => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [imageUrl, setImageUrl] = useState('')\r\n    const { goodUrl, changeGoodUrl } = props;\r\n    const uploadButton = (\r\n      <div>\r\n        {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n        <div style={{ marginTop: 8 }}>Upload</div>\r\n      </div>\r\n    );\r\n\r\n    const getPhotoToken = async () => {\r\n      const result =  await menuDispatch.getPhotoToken()\r\n      setPhotoToken(result)\r\n      uploadProps.token = result\r\n     }\r\n\r\n\r\n     const uploadProps = {\r\n      token: ''\r\n    }\r\n    const beforeUpload = (file = false) => {\r\n      if(file === false) return false\r\n      const isPNG = file.type === \"image/png\";\r\n      const isJPEG = file.type === \"image/jpeg\";\r\n      const isJPG = file.type === \"image/jpg\";\r\n      const isLt2M = file.size / 1024 / 1024 < 2;\r\n  \r\n      if (!isPNG && !isJPEG && !isJPG) {\r\n        message.error(\"上传头像图片只能是 jpg、png、jpeg 格式!\");\r\n        return false;\r\n      }\r\n      if (!isLt2M) {\r\n        message.error(\"上传头像图片大小不能超过 2MB!\");\r\n        return false;\r\n      }\r\n      \r\n      return uploadProps\r\n    }\r\n    const uploadStatus = (file) => {\r\n      if(file.file.response) {\r\n        const { response } = file.file\r\n        setImageUrl (`http://img.dashabi666.com/${response.key}`)\r\n        // imageUrl = `http://img.dashabi666.com/${response.key}`\r\n        changeGoodUrl(`http://img.dashabi666.com/${response.key}`)\r\n        console.log(imageUrl);\r\n\r\n      }\r\n    }\r\n  \r\n    const photoProps = {\r\n      name: 'file',\r\n      listType: \"picture-card\",\r\n      action: 'https://upload-z2.qiniup.com',\r\n      data: uploadProps,\r\n      beforeUpload: beforeUpload()\r\n     \r\n      // onChange: uploadStatus()\r\n    }\r\n\r\n    useEffect(() => {\r\n      getPhotoToken()\r\n    }, [uploadProps.token])\r\n    \r\n    return (\r\n      <Upload \r\n        {...photoProps} \r\n        onChange={uploadStatus}  \r\n        maxCount={1}\r\n       \r\n        >\r\n        {imageUrl ? null : uploadButton}\r\n      </Upload>\r\n    )\r\n  }\r\n\r\n\r\n  return(\r\n    \r\n    \r\n    <div>\r\n      <div>\r\n        <Form\r\n          {...layout}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          span={8}\r\n          form={form}\r\n        >\r\n          <Form.Item\r\n            label=\"菜品名称\"\r\n            name=\"goodName\"\r\n            rules={[{ required: true, message: '请输入菜品名称' }]}\r\n            >\r\n            <Input />\r\n          </Form.Item>\r\n          \r\n          <Form.Item name=\"goodNum\" label=\"菜品类型\"  rules={[{ required: true, message: '请输入菜品名称' }]}>\r\n            \r\n            <Select  \r\n              key={menuType.length}   \r\n              value={menuType.length} \r\n              labelInValue\r\n              filterOption={false}  \r\n              optionFilterProp=\"children\"  \r\n            >\r\n              {renderOption(menuType, 'log_id', 'menuName')}\r\n\r\n            </Select>\r\n            \r\n          \r\n          </Form.Item>\r\n    \r\n          <Form.Item\r\n            label=\"菜品价格\"\r\n            name=\"goodPrice\"\r\n            rules={[{ required: true, message: '请填写菜品价格' }]}\r\n            >\r\n            <Input />\r\n          </Form.Item>\r\n          \r\n          <Form.Item\r\n            label=\"简单描述\"\r\n            name=\"description\"\r\n            >\r\n            <Input />\r\n          </Form.Item>\r\n          \r\n          <Form.Item\r\n             label=\"上传图片\"\r\n             name=\"imgImage\"\r\n          >\r\n            <MyUploadPhoto goodUrl={goodUrl} changeGoodUrl={changeGoodUrl}>\r\n              \r\n            </MyUploadPhoto>\r\n          </Form.Item>\r\n         \r\n\r\n          <Form.Item {...tailLayout} >\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n            <Button htmlType=\"button\" onClick={onReset}>\r\n              Reset\r\n            </Button>\r\n\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n     \r\n    </div>\r\n  )\r\n\r\n\r\n}\r\n\r\n\r\nconst mapState = state => ({\r\n  menuType: state.menu.menuTypeList,\r\n  photoToken: state.menu.photoToken\r\n})\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n  menuDispatch: dispatch.menu\r\n})\r\nconst AddMenuContainer = connect(mapState, mapDispatch)(AddMenu)\r\nexport default AddMenuContainer;","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\menuList\\index.jsx",["198","199","200","201"],"import React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { useEffect } from \"react\";\r\nimport { Table, message } from \"antd\";\r\nconst Menu = props => {\r\n  const { menuDispatch } = props;\r\n  // let menuType = {}\r\n  const [page, setPage] = useState(1)\r\n  const [menuType, setMenuType] = useState({})\r\n  const getMenuList = async (page) => {\r\n    const res = await menuDispatch.findMenuList(page)\r\n    console.log('----', res);\r\n  }\r\n\r\n  const clickDelete = async (log_id) => {\r\n    const result = await menuDispatch.deleteGood(log_id)\r\n    if(result === true) {\r\n      message.success('删除成功')\r\n      getMenuList(page)\r\n    } else {\r\n      message.error('删除失败')\r\n    }\r\n  };\r\n  const getMenuTypeList = async () => {\r\n   const result =  await menuDispatch.getMenuTypeList()\r\n   result.forEach(e => {\r\n    menuType[e.log_id]  = e.menuName\r\n   });\r\n    // menuType = result\r\n    setMenuType(menuType)\r\n    console.log(menuType);\r\n\r\n  }\r\n  \r\n\r\n  const onChangePage = (page) => {\r\n    setPage(page.current)\r\n    getMenuList(page.current)\r\n  }\r\n  useEffect( async ()=> {\r\n   \r\n    await getMenuTypeList()\r\n    getMenuList(1)\r\n  \r\n }, [])\r\n\r\n\r\n\r\n\r\n const columns = [\r\n  {\r\n    title: '菜品标号',\r\n    dataIndex: 'log_id',\r\n    key: 'log_id'\r\n  },\r\n  {\r\n    title: '菜品类型标号',\r\n    dataIndex: 'goodNum',\r\n    key: 'goodNum',\r\n    render: (record) => {\r\n      return (\r\n        <span>{menuType[record]}</span>\r\n      )\r\n    }\r\n  },\r\n  {\r\n    title: '菜品名称',\r\n    dataIndex: 'goodName',\r\n    key: 'goodName'\r\n  },\r\n  {\r\n    title: '菜品图片',\r\n    dataIndex: 'goodUrl',\r\n    key: 'goodUrl',\r\n    render: (record) => {\r\n      return (\r\n        <img  width=\"160\" src={record} />\r\n      )\r\n    }\r\n  },\r\n  {\r\n    title: '菜品价格',\r\n    dataIndex: 'goodPrice',\r\n    key: 'goodPrice'\r\n  },\r\n  {\r\n    title: '是否上架',\r\n    dataIndex: 'showTrue',\r\n    key: 'showTrue',\r\n    render: (record) => {\r\n      return (\r\n        <span>{record ? '是': '否'}</span>\r\n      )\r\n    }\r\n  },\r\n  {\r\n    title: '简单描述',\r\n    dataIndex: 'description',\r\n    key: 'description',\r\n    width: '20%',\r\n    render: (record) => {\r\n      return (\r\n        <span>{record}</span>\r\n      )\r\n    }\r\n  },\r\n  {\r\n    title: '添加时间',\r\n    dataIndex: 'createTime',\r\n    key: 'createTime'\r\n  },\r\n  {\r\n    title: 'Action',\r\n    dataIndex: '',\r\n    key: 'x',\r\n    render: (record) => {\r\n      return (\r\n        <a onClick={() => clickDelete(record.log_id)}>删除菜品</a>\r\n        // <a href=\"\"> Delete </a>\r\n      )\r\n    }\r\n  },\r\n ]\r\n  return (\r\n    <div width=\"100%\">\r\n     <div  span={24}>\r\n     <Table \r\n        span={24}\r\n        columns={columns} \r\n        bordered\r\n        dataSource={ props && props.menuList && props.menuList.foodList} \r\n        rowKey='log_id'\r\n        pagination={{ \r\n          pageSize: 10, \r\n          total: props && props.menuList && props.menuList.count,\r\n        }}\r\n        onChange={onChangePage}\r\n      />\r\n     </div>\r\n    </div>\r\n)\r\n} \r\n\r\nconst mapState = state => ({\r\n  menuList: state.menu.menuList\r\n})\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n  menuDispatch: dispatch.menu\r\n})\r\nconst MenuContainer = connect(mapState, mapDispatch)(Menu)\r\nexport default MenuContainer;","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\order\\index.jsx",["202","203"],"import React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { useEffect } from \"react\";\r\nimport { Table, message } from \"antd\";\r\nconst Order = props => {\r\n  const { menuDispatch } = props;\r\n  const [page, setPage] = useState(1)\r\n  const getOrderList = async (page) => {\r\n    const res = await menuDispatch.findOrderList(page)\r\n    console.log('----', res);\r\n  }\r\n  const onChangePage = (page) => {\r\n    setPage(page.current)\r\n    console.log(page.current);\r\n    getOrderList(page.current)\r\n  }\r\n  const clickUpdate = async (log_id) => {\r\n    console.log(props);\r\n    const result = await menuDispatch.updateOrder(log_id)\r\n    if(result === true) {\r\n      message.success('确认成功')\r\n      getOrderList(page)\r\n    } else {\r\n      message.error('确认失败')\r\n    }\r\n  }\r\n\r\n  // const clickDelete = async (log_id) => {\r\n  //   const result = await menuDispatch.deleteMenuTypeList(log_id)\r\n  //   if(result === true) {\r\n  //     message.success('删除成功')\r\n  //     getMenuTypeList()\r\n  //   } else {\r\n  //     message.success('删除失败')\r\n  //   }\r\n  // };\r\n\r\n  useEffect( ()=> {\r\n    getOrderList(1)\r\n  \r\n }, [])\r\n\r\n\r\n\r\n\r\n const columns = [\r\n  {\r\n    title: '订单标号',\r\n    dataIndex: 'log_id',\r\n    key: 'log_id'\r\n  },\r\n  {\r\n    title: '下单用户',\r\n    dataIndex: 'wxName',\r\n    key: 'wxName'\r\n  },\r\n  {\r\n    title: '消费金额',\r\n    dataIndex: 'totalPrice',\r\n    key: 'totalPrice'\r\n  },\r\n  {\r\n    title: '就餐人数',\r\n    dataIndex: 'eatPeople',\r\n    key: 'eatPeople',\r\n    render: (record) => {\r\n      return (\r\n       <span>{record} 人就餐</span>\r\n      )\r\n    }\r\n  },\r\n  {\r\n    title: '菜品数量',\r\n    dataIndex: 'goodCount',\r\n    key: 'goodCount'\r\n  },\r\n  {\r\n    title: '订单状态',\r\n    dataIndex: 'state',\r\n    key: 'state',\r\n    render: (record) => {\r\n      return (\r\n        <span>{record === '1' ? '已下单': '已结账'}</span>\r\n      )\r\n    }\r\n  },\r\n  {\r\n    title: '添加时间',\r\n    dataIndex: 'createTime',\r\n    key: 'createTime'\r\n  },\r\n  {\r\n    title: 'Action',\r\n    dataIndex: '',\r\n    key: 'x',\r\n    render: (record) => {\r\n       if (record.state === '1' ) {\r\n        return (\r\n          <a onClick={() => clickUpdate(record.log_id)}> 支付确认 </a>\r\n        )\r\n       } else {\r\n        return (\r\n          <span> 已结账 </span>\r\n        )\r\n       }\r\n    }\r\n  },\r\n ]\r\n  return (\r\n    <div width=\"100%\">\r\n     <div  span={24}>\r\n     <Table \r\n        span={24}\r\n        columns={columns} \r\n        bordered\r\n        dataSource={ props && props.orderList && props.orderList.orderList} \r\n        rowKey='log_id'\r\n        pagination={{ \r\n          pageSize: 10, \r\n          total: props && props.orderList && props.orderList.count,\r\n        }}\r\n        onChange={onChangePage}\r\n      />\r\n     </div>\r\n    </div>\r\n)\r\n} \r\n\r\nconst mapState = state => ({\r\n  menuList: state.menu.menuList,\r\n  orderList: state.menu.orderList\r\n})\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n  menuDispatch: dispatch.menu\r\n})\r\nconst OrderContainer = connect(mapState, mapDispatch)(Order)\r\nexport default OrderContainer;","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\component\\Sider\\config.js",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\studentInfo.jsx",["204","205"],"import React,{useEffect, useState} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Input, Button, Checkbox, Table, message } from 'antd';\r\nimport { AudioOutlined } from '@ant-design/icons';\r\nimport MySearch from \"./component/MySearch\"\r\nimport MyTable from \"./component/MyTable\"\r\nimport  style  from \"./index.module.less\"\r\nimport OnImport from \"./component/onImport\"\r\n\r\nconst { Search } = Input;\r\nconst StudentInfo = props => {\r\n  const { healthDispatch } = props;\r\n  const [studentTable, setStudentTable] = useState({})\r\n\r\n  const getStudentTable = async (page = 1) => {\r\n    const result =  await healthDispatch.getStudentUserInfo(page)\r\n    setStudentTable(result)\r\n   \r\n  } \r\n\r\n  const clickDelete = () => {\r\n    console.log('1');\r\n  }\r\n  const receiveChildren = (data)=> {\r\n    postInfo(data)\r\n    return data\r\n  }\r\n  const postInfo = async (data) => {\r\n    console.log(data);\r\n    const result =  await healthDispatch.postStudentUserInfo(data)\r\n    if(result === true) {\r\n      message.success('导入成功')\r\n    } else {\r\n      message.success('导入失败')\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      title: '序号',\r\n      dataIndex: 'log_id',\r\n      key: 'log_id'\r\n    },\r\n    {\r\n      title: '学号',\r\n      dataIndex: 'studentNumber',\r\n      key: 'studentNumber'\r\n    },\r\n    {\r\n      title: '姓名',\r\n      dataIndex: 'name',\r\n      key: 'name'\r\n    },\r\n    {\r\n      title: '年级',\r\n      dataIndex: 'grade',\r\n      key: 'grade'\r\n    },\r\n    {\r\n      title: '学院',\r\n      dataIndex: 'college',\r\n      key: 'college'\r\n    },\r\n    {\r\n      title: '专业',\r\n      dataIndex: 'major',\r\n      key: 'major'\r\n    },\r\n    {\r\n      title: '账号',\r\n      dataIndex: 'account',\r\n      key: 'account'\r\n    },\r\n    {\r\n      title: '密码',\r\n      dataIndex: 'password',\r\n      key: 'password'\r\n    },\r\n    {\r\n      title: '班级',\r\n      dataIndex: 'classNumber',\r\n      key: 'classNumber'\r\n    },\r\n    {\r\n      title: '生源地',\r\n      dataIndex: 'studentOrigin',\r\n      key: 'studentOrigin'\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      key: 'x',\r\n      render: (record) => {\r\n        return (\r\n          <a onClick={() => clickDelete(record.log_id)}>编辑</a>\r\n        )\r\n      }\r\n    },\r\n  ]\r\n  useEffect(() => {\r\n    getStudentTable()\r\n  }, [])\r\n  console.log(studentTable);\r\n  return (\r\n    <div className={style.studentInfo}>\r\n      <div> <OnImport receiveChildren={receiveChildren} aHref='http://121.5.113.203/excel/student_info.xls'></OnImport></div>\r\n      <div>\r\n        <MySearch>\r\n\r\n        </MySearch>\r\n      </div>\r\n      \r\n      <div>\r\n        <MyTable \r\n          columns={columns} \r\n          total={ studentTable.count}\r\n          dataSource={studentTable && studentTable.table} \r\n        />\r\n      </div>\r\n    </div>\r\n)\r\n} \r\n\r\nconst mapState = state => ({\r\n})\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n  healthDispatch: dispatch.health\r\n})\r\nconst StudentInfoContainer = connect(mapState, mapDispatch)(StudentInfo)\r\nexport default StudentInfoContainer;","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\studentHealth.jsx",["206"],"import React, { useEffect, useState, useCallback } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport  style  from \"./index.module.less\"\r\nimport { Form, Input, Button, Checkbox, Table, message, Badge } from 'antd';\r\nimport MySearch from \"./component/MySearch\"\r\nimport MyEcharts from \"./component/echarts\"\r\nimport MyTable from \"./component/MyTable\"\r\nimport OnImport from \"./component/onImport\"\r\nconst StudentHealth = props => {\r\n  const show = true;\r\n  const { healthDispatch } = props;\r\n  const [peopleCount, setPeopleCount] = useState({})\r\n  const [echartData, setEchartData] = useState({})\r\n  const [studentTable, setStudentTable] = useState({})\r\n  const [page, setPage] = useState(1)\r\n\r\n  const getStudentHealthInfo = async () => {\r\n    const result =  await healthDispatch.getStudentHealth()\r\n\r\n    // peopleCount = result.peopleCount\r\n    setPeopleCount(result.peopleCount)\r\n    setEchartData(result.echartData)\r\n\r\n  }\r\n\r\n  const getStudentHealthTable = async (page, dateTime, type) => {\r\n    const result = await healthDispatch.getStudentHealthTable({page, dateTime, type})\r\n    console.log(result);\r\n    console.log(props);\r\n    setStudentTable(result)\r\n  }\r\n\r\n  const switchTable = (type) => {\r\n    setPage(1)\r\n    getStudentHealthTable(1, '2021/04/13', type)\r\n  }\r\n\r\n\r\n\r\n\r\n  useEffect( ()=> {\r\n    getStudentHealthInfo()\r\n    getStudentHealthTable(1,'2021/04/13','health')\r\n  \r\n }, [])\r\n  \r\n\r\n  const columns = [\r\n    \r\n    {\r\n      title: '学号',\r\n      dataIndex: 'studentNumber',\r\n      key: 'studentNumber'\r\n    },\r\n    {\r\n      title: '姓名',\r\n      dataIndex: 'name',\r\n      key: 'name'\r\n    },\r\n    {\r\n      title: '年级',\r\n      dataIndex: 'grade',\r\n      key: 'grade'\r\n    },\r\n    {\r\n      title: '学院',\r\n      dataIndex: 'college',\r\n      key: 'college'\r\n    },\r\n    {\r\n      title: '专业',\r\n      dataIndex: 'major',\r\n      key: 'major'\r\n    },\r\n    {\r\n      title: '体温是否正常',\r\n      dataIndex: 'animalHeat',\r\n      key: 'animalHeat',\r\n      render: (record) => {\r\n        console.log(record);\r\n        return (\r\n          <span\r\n            // style={{ backgroundColor: '#1789F3', color:'#ffffff', borderRadius: '10px', padding: '2px 4px'}}\r\n          >{ record && record? record : '未打卡' }</span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: '有无新冠相关症状',\r\n      dataIndex: 'symptom',\r\n      key: 'symptom'\r\n    },\r\n    // {\r\n    //   title: '是否打卡',\r\n    //   dataIndex: 'punchResult',\r\n    //   key: 'punchResult'\r\n    // },\r\n    {\r\n      title: '打卡时间',\r\n      dataIndex: 'createTime',\r\n      key: 'createTime'\r\n    },\r\n   \r\n  ]\r\n  const receiveChildren = (data)=> {\r\n    postInfo(data)\r\n    return data\r\n  }\r\n  const postInfo = async (data) => {\r\n    console.log(data);\r\n    const result =  await healthDispatch.postStudentHealth(data)\r\n    if(result === true) {\r\n      message.success('导入成功')\r\n    } else {\r\n      message.success('导入失败')\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={`${style['flexAlign']} ${style['margin20']}` }>\r\n        <div className={`${style.margins20} ` }>\r\n          <div>已打卡人数</div>\r\n          <div className={`${style['flexAlign']}`}>\r\n            <Badge\r\n              onClick={() => switchTable('health')}\r\n              className=\"site-badge-count-109\"\r\n              count={peopleCount ? peopleCount.punchListCount : 0}\r\n              style={{ backgroundColor: '#52c41a', cursor:'pointer' }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className={style.margins20}>\r\n          <div>未打卡人数</div>\r\n          <div className={`${style['flexAlign']}`}>\r\n            <Badge\r\n              onClick={() => switchTable('notPunch')}\r\n              className=\"site-badge-count-109\"\r\n              count={show ? peopleCount.notPunchCount : 0}\r\n              style={{ backgroundColor: '#1789F3', cursor:'pointer' }}\r\n            />\r\n          </div>\r\n          \r\n        </div>\r\n\r\n        <div className={style.margins20}>\r\n          <div>体温异常人数</div>\r\n          <div className={`${style['flexAlign']}`}>\r\n            <Badge\r\n              onClick={() => switchTable('animalHeat')}\r\n              className=\"site-badge-count-109\"\r\n              count={show ? peopleCount.animalHeatCount : 0}\r\n              style={{ backgroundColor: '#f5222d', cursor:'pointer' }}\r\n            />\r\n          </div>\r\n         \r\n        </div>\r\n\r\n        <div className={style.margins20}>\r\n          <div>疑似症状人数</div>\r\n          <div className={`${style['flexAlign']}`}>\r\n            <Badge\r\n              onClick={() => switchTable('symptomHeat')}\r\n              className=\"site-badge-count-109\"\r\n              count={show ? peopleCount.symptomHeatCount : 0}\r\n              style={{ backgroundColor: '#f5222d', cursor:'pointer' }}\r\n            />\r\n          </div>\r\n         \r\n        </div>\r\n       \r\n      </div>\r\n      <div> <OnImport receiveChildren={receiveChildren}  aHref='http://121.5.113.203/excel/student_health.xls'></OnImport></div>\r\n      <div className={style.flexAlign}>\r\n        <MyEcharts  id='noPunch' title='未打卡人数' xData={echartData && echartData.collegeNotPunchCount && echartData.collegeNotPunchCount.college} \r\n          seriesName = '人数' seriesData={echartData && echartData.collegeNotPunchCount && echartData.collegeNotPunchCount.personData}  ></MyEcharts>\r\n\r\n        <MyEcharts  id='animalHeat' title='新冠相关症状' xData={echartData && echartData.collegeAnimalHeatCount && echartData.collegeAnimalHeatCount.college} \r\n          seriesName = '人数' seriesData={echartData && echartData.collegeAnimalHeatCount && echartData.collegeAnimalHeatCount.personData}  ></MyEcharts>\r\n        <MyEcharts  id='symptomHeat' title='体温异常人数' xData={echartData && echartData.collegeSymptomHeatCount && echartData.collegeSymptomHeatCount.college} \r\n          seriesName = '人数' seriesData={echartData && echartData.collegeSymptomHeatCount && echartData.collegeSymptomHeatCount.personData}  ></MyEcharts>\r\n      </div>\r\n      <div className={style.flexAlign}>\r\n        \r\n      </div>\r\n      <div>\r\n        <MySearch ></MySearch>\r\n        <MyTable columns={columns} dataSource={studentTable && studentTable.table} total={studentTable.count} ></MyTable>\r\n      </div>\r\n    </div>\r\n)\r\n} \r\n\r\nconst mapState = state => ({\r\n  studentHealth: state.health.studentHealth\r\n})\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n  healthDispatch: dispatch.health\r\n})\r\nconst StudentHealthContainer = connect(mapState, mapDispatch)(StudentHealth)\r\nexport default StudentHealthContainer;","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\comeSchool.jsx",["207"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Input, Button, Checkbox, Table, message, Badge } from 'antd';\r\nimport  style  from \"./index.module.less\"\r\nimport EpidemicEcharts from './component/epidemicEcharts'\r\nimport MyTable from './component/MyTable'\r\nimport MyEcharts from \"./component/echarts\"\r\nconst Come = props => {\r\n  const columns = [\r\n    {\r\n      title: '序号',\r\n      dataIndex: 'log_id',\r\n      key: 'log_id'\r\n    },\r\n    {\r\n      title: '学号',\r\n      dataIndex: 'studentNumber',\r\n      key: 'studentNumber'\r\n    },\r\n    {\r\n      title: '姓名',\r\n      dataIndex: 'name',\r\n      key: 'name'\r\n    },\r\n    {\r\n      title: '年级',\r\n      dataIndex: 'grade',\r\n      key: 'grade'\r\n    },\r\n    {\r\n      title: '学院',\r\n      dataIndex: 'college',\r\n      key: 'college'\r\n    },\r\n    {\r\n      title: '外出地点（省市）',\r\n      dataIndex: 'province',\r\n      key: 'province'\r\n    },\r\n    {\r\n      title: '外出详细地点',\r\n      dataIndex: 'detailLocation',\r\n      key: 'detailLocation'\r\n    },\r\n    {\r\n      title: '途径城市',\r\n      dataIndex: 'approach',\r\n      key: 'approach'\r\n    },\r\n    {\r\n      title: '出校时间',\r\n      dataIndex: 'goSchool',\r\n      key: 'goSchool'\r\n    },\r\n    {\r\n      title: '返校时间',\r\n      dataIndex: 'comeSchool',\r\n      key: 'comeSchool'\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      key: 'x',\r\n      render: (record) => {\r\n        return (\r\n          <a onClick={() => clickDelete(record.log_id)}>编辑</a>\r\n        )\r\n      }\r\n    },\r\n    \r\n  ];\r\n  const studentJourneyList = [\r\n    {\r\n      log_id: '1',\r\n      studentNumber: '2017211222',\r\n      name: '小王',\r\n      grade: '2017',\r\n      college: '学院',\r\n      province: '北京市',\r\n      detailLocation: '北京市昌平区',\r\n      approach: '北京市 重庆市',\r\n      goSchool: '2021/04/16',\r\n      comeSchool: '2021/04/17'\r\n    }\r\n  ]\r\n  const comeStudent = {\r\n    first: 500,\r\n    second: 5000,\r\n    third: 7000\r\n  }\r\n  const echartsRisk = {\r\n    college: ['软件', '计算机'],\r\n    num: [1,3]\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div className={`${style['flexAlign']} ${style['margin20']}` }>\r\n        <div className={`${style.margins20} ` }>\r\n          <div>第一批返校人数</div>\r\n          <div className={`${style['flexAlign']}`}>\r\n            <Badge\r\n              overflowCount={99999}\r\n              className=\"site-badge-count-109\"\r\n              count={comeStudent ? comeStudent.first : 0}\r\n              style={{ backgroundColor: '#1789F3', cursor:'pointer' }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={style.margins20}>\r\n          <div>第二批返校人数</div>\r\n          <div className={`${style['flexAlign']}`}>\r\n            <Badge\r\n            \r\n              className=\"site-badge-count-109\"\r\n              count={comeStudent ? comeStudent.first : 0}\r\n              overflowCount={99999}\r\n              style={{ backgroundColor: '#f5222d', cursor:'pointer' }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={style.margins20}>\r\n          <div>第三批返校人数</div>\r\n          <div className={`${style['flexAlign']}`}>\r\n            <Badge\r\n            \r\n              className=\"site-badge-count-109\"\r\n              count={comeStudent ? comeStudent.first : 0}\r\n              overflowCount={99999}\r\n              style={{ backgroundColor: '#f5222d', cursor:'pointer' }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div >\r\n        <MyTable \r\n          title={'隔离名单'}\r\n          columns={columns} \r\n          dataSource={studentJourneyList} >\r\n        </MyTable>\r\n\r\n      </div>\r\n      <MyTable \r\n        title={'出入校数据'}\r\n        columns={columns} \r\n        dataSource={studentJourneyList} >\r\n      </MyTable>\r\n    </div>\r\n    \r\n)\r\n} \r\n\r\nconst mapState = state => ({\r\n})\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n\r\n})\r\nconst ComeContainer = connect(mapState, mapDispatch)(Come)\r\nexport default ComeContainer;","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\studentJourney.jsx",["208","209","210"],"import React, { useEffect, useState} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Input, Button, Checkbox, Table, message, Badge } from 'antd';\r\nimport  style  from \"./index.module.less\"\r\nimport EpidemicEcharts from './component/epidemicEcharts'\r\nimport MyTable from './component/MyTable'\r\nimport MyEcharts from \"./component/echarts\"\r\nimport OnImport from \"./component/onImport\"\r\nconst Journey = props => {\r\n  const { healthDispatch } = props;\r\n  const [collegeQuarantine, setCollegeQuarantine] = useState({})\r\n  const [studentJourney, setStudentJourney] = useState({})\r\n  const [studentQuarantine, setStudentQuarantine] = useState({})\r\n  const [epidemicEcharts, setEpidemicEcharts] = useState({})\r\n  const getCollegeJourney = async ()=> {\r\n    const result = await healthDispatch.getCollegeQuarantine()\r\n    setCollegeQuarantine(result)\r\n  }\r\n  const getStudentQuarantineTable = async (page) => {\r\n    const result = await healthDispatch.getStudentQuarantine(page)\r\n    console.log(result);\r\n    setStudentQuarantine(result)\r\n  }\r\n  const getStudentJourneyTable = async (page) => {\r\n    const result = await healthDispatch.getStudentJourney(page)\r\n    console.log(result);\r\n    setStudentJourney(result)\r\n  }\r\n  const getEpidemicEchartsData = async () => {\r\n    const result = await healthDispatch.getEpidemicEcharts()\r\n    console.log(result);\r\n    setEpidemicEcharts(result)\r\n  }\r\n  const addArray = (array) => {\r\n    return array.reduce((a, b) => a + b)\r\n  }\r\n\r\n  const receiveChildren = (data)=> {\r\n    postInfo(data)\r\n    return data\r\n  }\r\n  const postInfo = async (data) => {\r\n    console.log(data);\r\n    const result =  await healthDispatch.postStudentJourney(data)\r\n    if(result === true) {\r\n      message.success('导入成功')\r\n    } else {\r\n      message.success('导入失败')\r\n    }\r\n  }\r\n\r\n  // const getStudent\r\n  const journeyColumns = [\r\n    {\r\n      title: '序号',\r\n      dataIndex: 'log_id',\r\n      key: 'log_id'\r\n    },\r\n    {\r\n      title: '学号',\r\n      dataIndex: 'studentNumber',\r\n      key: 'studentNumber'\r\n    },\r\n    {\r\n      title: '姓名',\r\n      dataIndex: 'name',\r\n      key: 'name'\r\n    },\r\n    {\r\n      title: '年级',\r\n      dataIndex: 'grade',\r\n      key: 'grade'\r\n    },\r\n    {\r\n      title: '学院',\r\n      dataIndex: 'college',\r\n      key: 'college'\r\n    },\r\n    {\r\n      title: '外出地点（省市）',\r\n      dataIndex: 'province',\r\n      key: 'province'\r\n    },\r\n    {\r\n      title: '外出详细地点',\r\n      dataIndex: 'detailLocation',\r\n      key: 'detailLocation'\r\n    },\r\n    {\r\n      title: '途径城市',\r\n      dataIndex: 'approach',\r\n      key: 'approach'\r\n    },\r\n    {\r\n      title: '出校时间',\r\n      dataIndex: 'goSchool',\r\n      key: 'goSchool'\r\n    },\r\n    {\r\n      title: '返校时间',\r\n      dataIndex: 'comeSchool',\r\n      key: 'comeSchool'\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      key: 'x',\r\n      render: (record) => {\r\n        return (\r\n          <a onClick={() => clickDelete(record.log_id)}>编辑</a>\r\n        )\r\n      }\r\n    },\r\n    \r\n  ];\r\n  const QuarantineColumns = [\r\n    {\r\n      title: '序号',\r\n      dataIndex: 'log_id',\r\n      key: 'log_id'\r\n    },\r\n    {\r\n      title: '学号',\r\n      dataIndex: 'studentNumber',\r\n      key: 'studentNumber'\r\n    },\r\n    {\r\n      title: '姓名',\r\n      dataIndex: 'name',\r\n      key: 'name'\r\n    },\r\n    {\r\n      title: '年级',\r\n      dataIndex: 'grade',\r\n      key: 'grade'\r\n    },\r\n    {\r\n      title: '学院',\r\n      dataIndex: 'college',\r\n      key: 'college'\r\n    },\r\n    {\r\n      title: '外出地点（省市）',\r\n      dataIndex: 'province',\r\n      key: 'province'\r\n    },\r\n    {\r\n      title: '隔离时间',\r\n      dataIndex: 'comeSchool',\r\n      key: 'comeSchool'\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      key: 'x',\r\n      render: (record) => {\r\n        return (\r\n          <a onClick={() => clickDelete(record.log_id)}>编辑</a>\r\n        )\r\n      }\r\n    },\r\n    \r\n  ];\r\n  const studentJourneyList = [\r\n    {\r\n      log_id: '1',\r\n      studentNumber: '2017211222',\r\n      name: '小王',\r\n      grade: '2017',\r\n      college: '学院',\r\n      province: '北京市',\r\n      detailLocation: '北京市昌平区',\r\n      approach: '北京市 重庆市',\r\n      goSchool: '2021/04/16',\r\n      comeSchool: '2021/04/17'\r\n    }\r\n  ]\r\n  const studentBadge = {\r\n    risk: 7,\r\n    quarantine: 7\r\n  }\r\n  const echartsRisk = {\r\n    college: ['软件', '计算机'],\r\n    num: [1,3]\r\n  }\r\n  useEffect(() => {\r\n    getCollegeJourney()\r\n    getStudentQuarantineTable(1)\r\n    getStudentJourneyTable(1)\r\n    getEpidemicEchartsData()\r\n  }, [])\r\n  \r\n  return (\r\n    <div>\r\n      <EpidemicEcharts id=\"epidemic\" dataValue={epidemicEcharts} className={`${style['flexAlign'] }`}>\r\n\r\n      </EpidemicEcharts>\r\n      <div className={`${style['flexAlign']} ${style['margin20']}` }>\r\n        <div className={`${style.margins20} ` }>\r\n          <div>近七天出入中高风险地区人数</div>\r\n          <div className={`${style['flexAlign']}`}>\r\n            <Badge\r\n              \r\n              className=\"site-badge-count-109\"\r\n              count={collegeQuarantine.count ? addArray(collegeQuarantine.count) : 0}\r\n              style={{ backgroundColor: '#1789F3', cursor:'pointer' }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={style.margins20}>\r\n          <div>隔离人数</div>\r\n          <div className={`${style['flexAlign']}`}>\r\n            <Badge\r\n            \r\n              className=\"site-badge-count-109\"\r\n              count={studentQuarantine ? studentQuarantine.count : 0}\r\n              style={{ backgroundColor: '#f5222d', cursor:'pointer' }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={`${style['flexAlign']} ${style['margin20']}` }>\r\n        <MyEcharts id='noPunch' title='各学院出入中高风险地区人数' xData={collegeQuarantine && collegeQuarantine.college} \r\n          seriesName = '人数' seriesData={collegeQuarantine && collegeQuarantine.count }>\r\n\r\n        </MyEcharts>\r\n        <MyTable \r\n          title={'隔离名单'}\r\n          columns={QuarantineColumns}\r\n          total={studentQuarantine.count}\r\n          dataSource={studentQuarantine.table} >\r\n          \r\n        </MyTable>\r\n\r\n      </div>\r\n      <div> <OnImport receiveChildren={receiveChildren} aHref='http://121.5.113.203/excel/student_journey.xls'></OnImport></div>\r\n      <MyTable \r\n        title={'出入校数据'}\r\n        columns={journeyColumns} \r\n        total={studentJourney.count}\r\n        dataSource={studentJourney.table} >\r\n      </MyTable>\r\n    </div>\r\n    \r\n)\r\n} \r\n\r\nconst mapState = state => ({\r\n})\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n  healthDispatch: dispatch.health\r\n})\r\nconst JourneyContainer = connect(mapState, mapDispatch)(Journey)\r\nexport default JourneyContainer;","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\iconfont\\order.jsx",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\component\\MyTable.jsx",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\component\\MySearch.jsx",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\component\\echarts.jsx",["211"],"import React, { useEffect, useState } from 'react'\r\nimport { Form, Input, Button, Checkbox, Table, message, Badge } from 'antd';\r\nimport  style  from \"./index.module.less\"\r\nimport * as echarts from 'echarts';\r\n// const { Search } = Input;\r\nconst MyEcharts = props => {\r\n  const { id, title, xData, seriesName, seriesData } = props\r\n  \r\n  const initEcharts = () => {\r\n    // 基于准备好的dom，初始化echarts实例\r\n    const myChart = echarts.init(document.getElementById(`${id}`));\r\n      // 绘制图表\r\n    const option = {\r\n      title: { text: title },\r\n      tooltip: {},\r\n      xAxis: {\r\n          data: xData \r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n          name: seriesName,\r\n          type: \"bar\",\r\n          data: seriesData\r\n      }]\r\n    }\r\n    xData && myChart.setOption(option);\r\n\r\n    return myChart\r\n  }\r\n   \r\n  useEffect (() => {\r\n\r\n    initEcharts(xData)\r\n   \r\n  }, [props.xData])\r\n\r\n  return (\r\n    <div >\r\n      <div id={`${id}`} style={{ width: 400, height: 400, margin: '40px'}}></div>\r\n    </div>\r\n    \r\n    \r\n  )\r\n}\r\nexport default MyEcharts","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\component\\epidemicEcharts.jsx",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\component\\onImport.jsx",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\epidemic\\quarantineSet.jsx",["212","213"],"import React, {useEffect, useState} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Input, Button, Checkbox, Table, message, Modal } from 'antd';\r\nimport MyTable from \"./component/MyTable\"\r\nimport EpidemicEcharts from './component/epidemicEcharts'\r\nimport  style  from \"./index.module.less\"\r\nconst Quarantine = props => {\r\n  const {healthDispatch} = props\r\n  const [epidemicEcharts, setEpidemicEcharts] = useState({})\r\n\r\n \r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const getEpidemicEchartsData = async () => {\r\n    const result = await healthDispatch.getEpidemicEcharts()\r\n    console.log(result);\r\n    setEpidemicEcharts(result)\r\n  }\r\n  const columns = [\r\n    {\r\n      title: '省市',\r\n      dataIndex: 'label',\r\n      key: 'label'\r\n    },\r\n    {\r\n      title: '风险等级',\r\n      dataIndex: 'value',\r\n      key: 'value'\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      key: 'x',\r\n      render: (record) => {\r\n        return (\r\n          <a onClick={() => clickDelete(record.log_id)}>删除</a>\r\n        )\r\n      }\r\n    }\r\n  ]\r\n  const dataSource = [\r\n    {\r\n      label: '北京市',\r\n      value: '200'\r\n    },\r\n    {\r\n      label: '北京市',\r\n      value: '200'\r\n    }\r\n  ]\r\n  useEffect(() => {\r\n    getEpidemicEchartsData()\r\n  }, [])\r\n  \r\n  return (\r\n    <div>\r\n       <EpidemicEcharts id=\"epidemic\" dataValue={epidemicEcharts} className={`${style['flexAlign'] }`}>\r\n\r\n      </EpidemicEcharts>\r\n\r\n      <Button type=\"primary\" onClick={showModal}>\r\n       添加\r\n      </Button>\r\n      <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n        <Input addonBefore=\"城市\"></Input>\r\n        <Input style={{ marginTop: 20}} addonBefore=\"风险等级\"></Input>\r\n      </Modal>\r\n\r\n      <MyTable\r\n        title=\"中高风险地区设置\"\r\n        columns={columns} \r\n        total={ 0}\r\n        dataSource={dataSource} \r\n        />\r\n    </div>\r\n)\r\n} \r\n\r\nconst mapState = state => ({\r\n})\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n  healthDispatch: dispatch.health\r\n})\r\nconst QuarantineContainer = connect(mapState, mapDispatch)(Quarantine)\r\nexport default QuarantineContainer;","C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\grade\\index.js",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\grade\\gradeForm.jsx",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\grade\\addCourse.jsx",["214"],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\grade\\userInfo.jsx",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\grade\\myCourse.jsx",["215","216"],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\grade\\component\\index.js",[],"C:\\Users\\liangshenghua\\Documents\\web\\dining\\dining_github\\browser\\src\\modules\\index\\page\\grade\\component\\MyTable.jsx",[],{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":35,"column":6,"nodeType":"223","endLine":35,"endColumn":16,"suggestions":"224"},{"ruleId":"221","severity":1,"message":"225","line":62,"column":6,"nodeType":"223","endLine":62,"endColumn":8,"suggestions":"226"},{"ruleId":"227","severity":1,"message":"228","line":87,"column":11,"nodeType":"229","endLine":87,"endColumn":57},{"ruleId":"221","severity":1,"message":"230","line":113,"column":5,"nodeType":"223","endLine":113,"endColumn":7,"suggestions":"231"},{"ruleId":"221","severity":1,"message":"225","line":81,"column":5,"nodeType":"223","endLine":81,"endColumn":7,"suggestions":"232"},{"ruleId":"221","severity":1,"message":"233","line":145,"column":8,"nodeType":"223","endLine":145,"endColumn":27,"suggestions":"234"},{"ruleId":"221","severity":1,"message":"235","line":42,"column":14,"nodeType":"236","endLine":47,"endColumn":3},{"ruleId":"221","severity":1,"message":"237","line":47,"column":5,"nodeType":"223","endLine":47,"endColumn":7,"suggestions":"238"},{"ruleId":"239","severity":1,"message":"240","line":79,"column":9,"nodeType":"229","endLine":79,"endColumn":42},{"ruleId":"227","severity":1,"message":"228","line":120,"column":9,"nodeType":"229","endLine":120,"endColumn":55},{"ruleId":"221","severity":1,"message":"241","line":43,"column":5,"nodeType":"223","endLine":43,"endColumn":7,"suggestions":"242"},{"ruleId":"227","severity":1,"message":"228","line":101,"column":11,"nodeType":"229","endLine":101,"endColumn":57},{"ruleId":"227","severity":1,"message":"228","line":96,"column":11,"nodeType":"229","endLine":96,"endColumn":57},{"ruleId":"221","severity":1,"message":"243","line":103,"column":6,"nodeType":"223","endLine":103,"endColumn":8,"suggestions":"244"},{"ruleId":"221","severity":1,"message":"245","line":47,"column":5,"nodeType":"223","endLine":47,"endColumn":7,"suggestions":"246"},{"ruleId":"227","severity":1,"message":"228","line":68,"column":11,"nodeType":"229","endLine":68,"endColumn":57},{"ruleId":"227","severity":1,"message":"228","line":112,"column":11,"nodeType":"229","endLine":112,"endColumn":57},{"ruleId":"227","severity":1,"message":"228","line":160,"column":11,"nodeType":"229","endLine":160,"endColumn":57},{"ruleId":"221","severity":1,"message":"247","line":193,"column":6,"nodeType":"223","endLine":193,"endColumn":8,"suggestions":"248"},{"ruleId":"221","severity":1,"message":"249","line":35,"column":6,"nodeType":"223","endLine":35,"endColumn":19,"suggestions":"250"},{"ruleId":"227","severity":1,"message":"228","line":50,"column":11,"nodeType":"229","endLine":50,"endColumn":57},{"ruleId":"221","severity":1,"message":"251","line":67,"column":6,"nodeType":"223","endLine":67,"endColumn":8,"suggestions":"252"},{"ruleId":"227","severity":1,"message":"228","line":45,"column":11,"nodeType":"229","endLine":45,"endColumn":57},{"ruleId":"227","severity":1,"message":"228","line":45,"column":14,"nodeType":"229","endLine":45,"endColumn":32},{"ruleId":"227","severity":1,"message":"228","line":46,"column":14,"nodeType":"229","endLine":46,"endColumn":59},"no-native-reassign",["253"],"no-negated-in-lhs",["254"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getUserName' and 'props.userName'. Either include them or remove the dependency array. If 'setUserName' needs the current value of 'props.userName', you can also switch to useReducer instead of useState and read 'props.userName' in the reducer.","ArrayExpression",["255"],"React Hook useEffect has a missing dependency: 'getMenuTypeList'. Either include it or remove the dependency array.",["256"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getApproveList'. Either include it or remove the dependency array.",["257"],["258"],"React Hook useEffect has a missing dependency: 'getPhotoToken'. Either include it or remove the dependency array.",["259"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'getMenuList' and 'getMenuTypeList'. Either include them or remove the dependency array.",["260"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'getOrderList'. Either include it or remove the dependency array.",["261"],"React Hook useEffect has a missing dependency: 'getStudentTable'. Either include it or remove the dependency array.",["262"],"React Hook useEffect has missing dependencies: 'getStudentHealthInfo' and 'getStudentHealthTable'. Either include them or remove the dependency array.",["263"],"React Hook useEffect has missing dependencies: 'getCollegeJourney', 'getEpidemicEchartsData', 'getStudentJourneyTable', and 'getStudentQuarantineTable'. Either include them or remove the dependency array.",["264"],"React Hook useEffect has missing dependencies: 'initEcharts' and 'xData'. Either include them or remove the dependency array.",["265"],"React Hook useEffect has a missing dependency: 'getEpidemicEchartsData'. Either include it or remove the dependency array.",["266"],"no-global-assign","no-unsafe-negation",{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"269","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},"Update the dependencies array to be: [getUserName, props.userName, userName]",{"range":"290","text":"291"},"Update the dependencies array to be: [getMenuTypeList]",{"range":"292","text":"293"},"Update the dependencies array to be: [getApproveList]",{"range":"294","text":"295"},{"range":"296","text":"293"},"Update the dependencies array to be: [getPhotoToken, uploadProps.token]",{"range":"297","text":"298"},"Update the dependencies array to be: [getMenuList, getMenuTypeList]",{"range":"299","text":"300"},"Update the dependencies array to be: [getOrderList]",{"range":"301","text":"302"},"Update the dependencies array to be: [getStudentTable]",{"range":"303","text":"304"},"Update the dependencies array to be: [getStudentHealthInfo, getStudentHealthTable]",{"range":"305","text":"306"},"Update the dependencies array to be: [getCollegeJourney, getEpidemicEchartsData, getStudentJourneyTable, getStudentQuarantineTable]",{"range":"307","text":"308"},"Update the dependencies array to be: [initEcharts, props.xData, xData]",{"range":"309","text":"310"},"Update the dependencies array to be: [getEpidemicEchartsData]",{"range":"311","text":"312"},[918,928],"[getUserName, props.userName, userName]",[1441,1443],"[getMenuTypeList]",[2437,2439],"[getApproveList]",[2097,2099],[3906,3925],"[getPhotoToken, uploadProps.token]",[1228,1230],"[getMenuList, getMenuTypeList]",[1194,1196],"[getOrderList]",[2323,2325],"[getStudentTable]",[1475,1477],"[getStudentHealthInfo, getStudentHealthTable]",[4537,4539],"[getCollegeJourney, getEpidemicEchartsData, getStudentJourneyTable, getStudentQuarantineTable]",[877,890],"[initEcharts, props.xData, xData]",[1559,1561],"[getEpidemicEchartsData]"]